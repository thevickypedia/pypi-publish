---
name: pypi-publisher
description: Lightweight composite action to upload Python distribution packages to PyPI
inputs:
  user:
    description: PyPI user
    required: false
    default: __token__
  token:
    description: Password for your PyPI user or an access token
    required: true
  test-upload:
    description: Upload distributions to TestPyPI
    required: false
    default: 'false'
  dry-run:
    description: Builds the distribution without uploading to PyPi
    required: false
    default: 'false'
  repository-url:
    description: The repository URL to use
    required: false
  packages-dir:
    description: The target directory for distribution
    required: false
    default: dist
  verify-metadata:
    description: Check metadata before uploading
    required: false
    default: 'true'
  skip-existing:
    description: >-
      Do not fail if a Python package distribution
      exists in the target package index
    required: false
    default: 'false'
  verbose:
    description: Show verbose output.
    required: false
    default: 'false'
  print-hash:
    description: Show hash values of distribution files
    required: false
    default: 'true'
branding:
  color: gray-dark
  icon: package

outputs: { }

runs:
  using: composite
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Arguments
      run: |
        TWINE_EXTRA_ARGS=--disable-progress-bar
        if [[ ${{ inputs.skip-existing }} != "false" ]] ; then
          TWINE_EXTRA_ARGS="${TWINE_EXTRA_ARGS} --skip-existing"
        fi
        if [[ ${{ inputs.verbose }} != "false" ]] ; then
          TWINE_EXTRA_ARGS="--verbose $TWINE_EXTRA_ARGS"
        fi
        echo "TWINE_EXTRA_ARGS=$TWINE_EXTRA_ARGS" >> $GITHUB_ENV

        if [[ ${{ inputs.test-upload }} == "true" ]] ; then
          echo "repository_url=https://test.pypi.org/simple/" >> $GITHUB_ENV
        else
          echo "repository_url=https://upload.pypi.org/legacy/" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
      shell: bash

    - name: Create packages
      run: python -m build
      shell: bash

    - name: Run twine check
      if: inputs.verify-metadata != false || inputs.dry-run != false
      run: twine check ${{ inputs.packages-dir }}/*
      shell: bash

    - name: Get distribution hash
      if: inputs.print-hash != false || inputs.verbose != false
      run: |
        import hashlib
        import pathlib
        import sys

        distro = "${{ inputs.packages-dir }}"
        packages_dir = pathlib.Path(distro).resolve().absolute()

        output = '## Hash values for distributions:\n'

        for file_object in packages_dir.iterdir():
            sha256 = hashlib.sha256()
            md5 = hashlib.md5()  # noqa: S324; only use for reference
            blake2_256 = hashlib.blake2b(digest_size=256 // 8)

            output += f"### {file_object.name}\n"

            content = file_object.read_bytes()

            sha256.update(content)
            md5.update(content)
            blake2_256.update(content)

            output += f'**SHA256** - {sha256.hexdigest()}\n'
            output += f'**MD5** - {md5.hexdigest()}\n'
            output += f'**BLAKE2-256** - {blake2_256.hexdigest()}\n'
            output += '\n\n'

        with open("hash_summary", "w") as file:
            file.write(output)
      shell: python

    - name: Print hash
      if: inputs.print-hash != false || inputs.verbose != false
      run: |
        if [ ! -f "hash_summary" ]; then
          echo "::warning title=Hash Summary::Summary file is missing"
          exit 0
        fi
        cat hash_summary > $GITHUB_STEP_SUMMARY
      shell: bash

    - name: Upload to pypi
      if: inputs.dry-run != false
      env:
        TWINE_USERNAME: ${{ inputs.user }}
        TWINE_PASSWORD: ${{ inputs.token }}
        TWINE_REPOSITORY_URL: ${{ env.repository_url }}
      run: twine upload ${{ env.TWINE_EXTRA_ARGS }} ${{ inputs.packages-dir }}/*.whl
      shell: bash
